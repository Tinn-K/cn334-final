services:
  nginx-proxy:
    build: ./nginx
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  db:
    image: postgres:15
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./data.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
  product_api:
    build: ./products
    command: python -m uvicorn app.main:app --host 0.0.0.0
    volumes:
      - ./products:/code
    ports:
      - "3341:8000"
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SECRET_KEY=${SECRET_KEY}
      - AI_FOR_THAI_KEY=${AI_FOR_THAI_KEY}
    depends_on:
      - db
  user_api:
    build: ./users
    command: python -m uvicorn app.main:app --host 0.0.0.0
    volumes:
      - ./users:/code
    ports:
      - "3342:8000"
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SECRET_KEY=${SECRET_KEY}
      - AI_FOR_THAI_KEY=${AI_FOR_THAI_KEY}
    depends_on:
      - db
  frontend:
    build: ./frontend
    command: npm run start
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/build
    ports:
      - "3343:3000"
